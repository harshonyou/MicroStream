version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - kafka_network

  kafka-0:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-0
    depends_on:
      - zookeeper
    ports:
      - 29090:29090
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9090,PLAINTEXT_HOST://localhost:29090
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_0_data:/var/lib/kafka/data
    networks:
      - kafka_network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - 29091:29091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9091,PLAINTEXT_HOST://localhost:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_1_data:/var/lib/kafka/data
    networks:
      - kafka_network

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_2_data:/var/lib/kafka/data
    networks:
      - kafka_network

  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-init
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    command: >
      /bin/bash -c "
        echo 'Waiting for Kafka to start...' &&
        until kafka-topics --bootstrap-server kafka-0:9090 --list;
        do
          sleep 2;
        done &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-0:9090 --partitions 6 --replication-factor 3 --topic video-creation-events &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-0:9090 --partitions 6 --replication-factor 3 --topic video-engagement-events &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka-0:9090 --partitions 6 --replication-factor 3 --topic video-feedback-events
      "
    networks:
      - kafka_network

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - zookeeper
      - kafka-0
      - kafka-1
      - kafka-2
    ports:
      - 8085:8085
      - 8181:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9090,kafka-1:9091,kafka-2:9092
    networks:
      - kafka_network

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=micronautCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RAC1
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - cassandra_network

  cassandra-init:
    image: cassandra:latest
    container_name: cassandra-init
    depends_on:
      - cassandra
    command: >
      /bin/bash -c "
        until cqlsh cassandra -e 'describe keyspaces';
        do
          echo 'Waiting for Cassandra to be up...'
          sleep 2
        done &&
        cqlsh cassandra -e \"CREATE KEYSPACE IF NOT EXISTS micronaut WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 1};\""
    networks:
      - cassandra_network

networks:
  kafka_network:
    driver: bridge
  cassandra_network:
    driver: bridge

volumes:
  zookeeper_data:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  cassandra_data:
